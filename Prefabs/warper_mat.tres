[gd_resource type="ShaderMaterial" load_steps=14 format=2]

[sub_resource type="VisualShaderNodeScalarClamp" id=1]
default_input_values = [ 0, 0.0, 1, 0.1, 2, 1.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=15]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 0.8 ]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=2]
uniform_name = "ColorUniform"
default_value_enabled = true
default_value = Color( 1, 0.466575, 0.950243, 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 15.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShader" id=18]
code = "shader_type spatial;
render_mode blend_add, depth_draw_never, cull_disabled, diffuse_toon, specular_disabled, async_visible, shadows_disabled, ambient_light_disabled;

uniform vec4 ColorUniform : hint_color = vec4(1.000000, 0.466575, 0.950243, 1.000000);



void vertex() {
// Output:0

}

void fragment() {
// Color:11
	vec3 n_out11p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out11p1 = 1.000000;

// Input:7
	float n_out7p0 = TIME;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// VectorOp:6
	vec3 n_out6p0 = vec3(n_out7p0) + vec3(n_out4p1);

// ScalarOp:8
	float n_in8p1 = 15.00000;
	float n_out8p0 = dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333)) * n_in8p1;

// ScalarFunc:5
	float n_out5p0 = tan(n_out8p0);

// ScalarClamp:10
	float n_in10p1 = 0.10000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out5p0, n_in10p1, n_in10p2);

// ScalarOp:12
	float n_in12p1 = 0.80000;
	float n_out12p0 = n_out10p0 + n_in12p1;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) * vec3(n_out4p1);

// ColorUniform:2
	vec3 n_out2p0 = ColorUniform.rgb;
	float n_out2p1 = ColorUniform.a;

// VectorOp:9
	vec3 n_out9p0 = vec3(n_out10p0) * n_out2p0;

// Output:0
	ALBEDO = n_out11p0;
	ALPHA = dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333));
	EMISSION = n_out9p0;

}

void light() {
// Output:0

}
"
modes/blend = 1
modes/cull = 2
modes/depth_draw = 2
modes/diffuse = 4
modes/specular = 4
flags/ambient_light_disabled = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2( 1700, 20 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -220, 140 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -540, -20 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -80, -20 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 420, -160 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -60, -280 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -380, -240 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( 240, -200 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( 980, 120 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 680, -240 )
nodes/fragment/11/node = SubResource( 15 )
nodes/fragment/11/position = Vector2( 1440, -200 )
nodes/fragment/12/node = SubResource( 16 )
nodes/fragment/12/position = Vector2( 920, -160 )
nodes/fragment/13/node = SubResource( 17 )
nodes/fragment/13/position = Vector2( 1214.73, -46.3109 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 1, 6, 1, 7, 0, 6, 0, 6, 0, 8, 0, 8, 0, 5, 0, 2, 0, 9, 1, 5, 0, 10, 0, 10, 0, 9, 0, 10, 0, 12, 0, 12, 0, 13, 0, 4, 1, 13, 1, 13, 0, 0, 1, 11, 0, 0, 0, 9, 0, 0, 5 )

[resource]
shader = SubResource( 18 )
shader_param/ColorUniform = Color( 1, 0.584314, 0.501961, 1 )
