[gd_resource type="VisualShader" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=3608]
output_port_for_preview = 1
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeColorUniform" id=3986]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeScalarConstant" id=3610]

[sub_resource type="VisualShaderNodeScalarConstant" id=3611]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id=3612]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=3613]

[sub_resource type="VisualShaderNodeVectorOp" id=3614]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=3987]
uniform_name = "ScalarUniform"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id=3988]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=3998]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=3999]

[sub_resource type="VisualShaderNodeScalarUniform" id=4000]
uniform_name = "freq"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=4001]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=4002]
uniform_name = "size"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id=4003]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=3989]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=3990]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorFunc" id=3991]
function = 28

[sub_resource type="VisualShaderNodeVectorOp" id=3992]

[sub_resource type="VisualShaderNodeVectorOp" id=3993]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=3994]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3995]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=3996]

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, diffuse_burley, specular_disabled, async_visible;

uniform float ScalarUniform = 1;
uniform float freq = 1;
uniform float size = 1;
uniform vec4 ColorUniform : hint_color;
uniform sampler2D TextureUniform;



void vertex() {
// ScalarUniform:10
	float n_out10p0 = ScalarUniform;

// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// VectorDecompose:9
	float n_out9p0 = n_out7p0.x;
	float n_out9p1 = n_out7p0.y;
	float n_out9p2 = n_out7p0.z;

// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:15
	float n_out15p0 = freq;

// ScalarOp:16
	float n_out16p0 = n_out2p0 * n_out15p0;

// ScalarUniform:17
	float n_out17p0 = size;

// Input:13
	vec3 n_out13p0 = VERTEX;

// VectorOp:18
	vec3 n_out18p0 = vec3(n_out17p0) * n_out13p0;

// VectorOp:14
	vec3 n_out14p0 = vec3(n_out16p0) + n_out18p0;

// VectorFunc:4
	vec3 n_out4p0 = sin(n_out14p0);

// VectorOp:6
	vec3 n_in6p1 = vec3(0.10000, 0.00000, 0.00000);
	vec3 n_out6p0 = n_out4p0 * n_in6p1;

// VectorOp:8
	vec3 n_out8p0 = vec3(n_out9p1) * n_out6p0;

// VectorOp:12
	vec3 n_out12p0 = vec3(n_out10p0) * n_out8p0;

// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorOp:5
	vec3 n_out5p0 = n_out12p0 + n_out3p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// ColorUniform:11
	vec3 n_out11p0 = ColorUniform.rgb;
	float n_out11p1 = ColorUniform.a;

// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// VectorOp:8
	vec3 n_out8p0 = n_out11p0 * vec3(n_out7p1);

// TextureUniform:10
	vec3 n_out10p0;
	float n_out10p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out10p0 = n_tex_read.rgb;
		n_out10p1 = n_tex_read.a;
	}

// Scalar:3
	float n_out3p0 = 0.000000;

// Scalar:4
	float n_out4p0 = 1.000000;

// Output:0
	ALBEDO = n_out8p0;
	ALPHA = n_out10p1;
	METALLIC = n_out3p0;
	ROUGHNESS = n_out4p0;
	SPECULAR = n_out3p0;

}

void light() {
// Output:0

}
"
modes/cull = 2
modes/depth_draw = 3
modes/diffuse = 3
modes/specular = 4
nodes/vertex/0/position = Vector2( 800, 200 )
nodes/vertex/2/node = SubResource( 3989 )
nodes/vertex/2/position = Vector2( -1280, -80 )
nodes/vertex/3/node = SubResource( 3990 )
nodes/vertex/3/position = Vector2( -340, 220 )
nodes/vertex/4/node = SubResource( 3991 )
nodes/vertex/4/position = Vector2( -600, 40 )
nodes/vertex/5/node = SubResource( 3992 )
nodes/vertex/5/position = Vector2( 340, 140 )
nodes/vertex/6/node = SubResource( 3993 )
nodes/vertex/6/position = Vector2( -300, 80 )
nodes/vertex/7/node = SubResource( 3994 )
nodes/vertex/7/position = Vector2( -400, -100 )
nodes/vertex/8/node = SubResource( 3995 )
nodes/vertex/8/position = Vector2( -20, 20 )
nodes/vertex/9/node = SubResource( 3996 )
nodes/vertex/9/position = Vector2( -220, -120 )
nodes/vertex/10/node = SubResource( 3987 )
nodes/vertex/10/position = Vector2( 60, -180 )
nodes/vertex/12/node = SubResource( 3988 )
nodes/vertex/12/position = Vector2( 400, -80 )
nodes/vertex/13/node = SubResource( 3998 )
nodes/vertex/13/position = Vector2( -1300, 400 )
nodes/vertex/14/node = SubResource( 3999 )
nodes/vertex/14/position = Vector2( -840, 100 )
nodes/vertex/15/node = SubResource( 4000 )
nodes/vertex/15/position = Vector2( -1480, 60 )
nodes/vertex/16/node = SubResource( 4001 )
nodes/vertex/16/position = Vector2( -1080, 60 )
nodes/vertex/17/node = SubResource( 4002 )
nodes/vertex/17/position = Vector2( -1420, 220 )
nodes/vertex/18/node = SubResource( 4003 )
nodes/vertex/18/position = Vector2( -1120, 200 )
nodes/vertex/connections = PoolIntArray( 3, 0, 5, 1, 4, 0, 6, 0, 7, 0, 9, 0, 9, 1, 8, 0, 6, 0, 8, 1, 5, 0, 0, 0, 10, 0, 12, 0, 8, 0, 12, 1, 12, 0, 5, 0, 14, 0, 4, 0, 2, 0, 16, 0, 15, 0, 16, 1, 16, 0, 14, 0, 17, 0, 18, 0, 13, 0, 18, 1, 18, 0, 14, 1 )
nodes/fragment/0/position = Vector2( 740, 40 )
nodes/fragment/3/node = SubResource( 3610 )
nodes/fragment/3/position = Vector2( -120, 340 )
nodes/fragment/4/node = SubResource( 3611 )
nodes/fragment/4/position = Vector2( -120, 420 )
nodes/fragment/6/node = SubResource( 3612 )
nodes/fragment/6/position = Vector2( -460, 100 )
nodes/fragment/7/node = SubResource( 3613 )
nodes/fragment/7/position = Vector2( -106.726, 35.1134 )
nodes/fragment/8/node = SubResource( 3614 )
nodes/fragment/8/position = Vector2( 260, -20 )
nodes/fragment/10/node = SubResource( 3608 )
nodes/fragment/10/position = Vector2( -520, 200 )
nodes/fragment/11/node = SubResource( 3986 )
nodes/fragment/11/position = Vector2( -360, -180 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 2, 4, 0, 0, 3, 3, 0, 0, 4, 6, 0, 7, 0, 7, 1, 8, 1, 11, 0, 8, 0, 8, 0, 0, 0, 10, 1, 0, 1 )
